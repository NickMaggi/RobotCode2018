// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3098.RobotTemplate.commands;
import org.usfirst.frc3098.RobotTemplate.Robot;
import org.usfirst.frc3098.RobotTemplate.util.Constants;
import org.usfirst.frc3098.RobotTemplate.util.JoystickAxisScaling;

import edu.wpi.first.wpilibj.command.Command;

/**
 *
 */
public class CmdDriveTrainJoystickDrive extends Command {
	private double brakeFactor;

    public CmdDriveTrainJoystickDrive() {

       requires(Robot.driveTrain);

    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	brakeFactor = 0.0;
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	
    	double rightJoystickXAxis, leftJoystickYAxis, leftMotorOutput, rightMotorOutput;
    	
    	rightJoystickXAxis = JoystickAxisScaling.getY(Robot.oi.joystickDriver.getRawAxis(Constants.RIGHT_JOYSTICK_X),
    			0.0, 0.0, 1.0, 1.0);
    	if(Robot.driveTrain.isRightSideOutputInverted()) {
    		leftJoystickYAxis = -JoystickAxisScaling.getY(Robot.oi.joystickDriver.getRawAxis(Constants.LEFT_JOYSTICK_Y),
        			0.0, 0.0, 1.0, -1.0);
    	}
    	else
    	{
    		leftJoystickYAxis = JoystickAxisScaling.getY(Robot.oi.joystickDriver.getRawAxis(Constants.LEFT_JOYSTICK_Y),
        			0.0, 0.0, 1.0, -1.0);
    	}
    	
    	
    	if ( rightJoystickXAxis == 0.0 && leftJoystickYAxis != 0.0 )	//straight forward or reverse with the x axis in deadband
    	{
    		leftMotorOutput = leftJoystickYAxis;
    		rightMotorOutput = leftJoystickYAxis;
    	}
    	
    	else if ( rightJoystickXAxis > 0.0 && leftJoystickYAxis != 0.0 )	//quadrant I or IV
    	{
    		leftMotorOutput = leftJoystickYAxis;
    		rightMotorOutput = leftJoystickYAxis - rightJoystickXAxis;
    	}
    	
    	else if ( rightJoystickXAxis < 0.0 && leftJoystickYAxis != 0.0 )	//quadrant II or III
    	{
    		rightMotorOutput = leftJoystickYAxis;
    		leftMotorOutput = leftJoystickYAxis + rightJoystickXAxis;
    	}
    	
    	else if ( leftJoystickYAxis == 0.0 && rightJoystickXAxis != 0.0 )	//rotate left or right with the y axis in deadband
    	{
    		leftMotorOutput = rightJoystickXAxis;
    		rightMotorOutput = -rightJoystickXAxis;
    	}
    	
    	else	//x axis in deadband and y axis in deadband
    	{
    		leftMotorOutput = 0.0;
    		rightMotorOutput = 0.0;
    	}
    	
    	brakeFactor = JoystickAxisScaling.getY(Robot.oi.joystickDriver.getRawAxis(Constants.LEFT_TRIGGER),
    			0.0, 0.0, 1.0, 0.8);
    	
    	Robot.driveTrain.updateDriveSpeeds(leftMotorOutput * (1-brakeFactor), rightMotorOutput * (1-brakeFactor));
   	
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
